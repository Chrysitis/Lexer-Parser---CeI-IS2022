[ INT ] int
[ MAIN ] main()
[ LCURLY ] {
[ INT ] int
[ ID 0 ] c - Found in symbol table: 1
[ EQ ] =
[ INTLIT ] 0
[ HASH ] #
[ INT ] int
[ ID 1 ] y - Found in symbol table: 1
[ EQ ] =
[ INTLIT ] 12
[ MULT ] *
[ INTLIT ] 3
[ HASH ] #
[ IF ] if
[ LPAREN ] (
[ INTLIT ] 5
[ LT ] <
[ INTLIT ] 10
[ RPAREN ] )
[ THEN ] then
[ LCURLY ] {
[ ID 2 ] c - Found in symbol table: 2
[ EQ ] =
[ INTLIT ] 5
[ HASH ] #
[ INT ] int
[ ID 3 ] x - Found in symbol table: 2
[ EQ ] =
[ INTLIT ] 9
[ MULT ] *
[ INTLIT ] 9
[ HASH ] #
[ RCURLY ] }
[ STRING ] string
[ ID 4 ] str_1 - Found in symbol table: 1
[ HASH ] #
[ STRING ] string
[ ID 5 ] str_2 - Found in symbol table: 1
[ EQ ] =
[ STRINGLIT ] "Esto es un string"
[ HASH ] #
[ ID 6 ] str_1 - Found in symbol table: 1
[ EQ ] =
[ STRINGLIT ] "Init string"
[ HASH ] #
[ BOOL ] boolean
[ ID 7 ] b_1 - Found in symbol table: 1
[ HASH ] #
[ BOOL ] boolean
[ ID 8 ] b_2 - Found in symbol table: 1
[ EQ ] =
[ TRUE ] true
[ HASH ] #
[ ID 9 ] b_2 - Found in symbol table: 1
[ EQ ] =
[ FALSE ] false
[ HASH ] #
[ ID 10 ] x - Found in symbol table: 1
[ EQ ] =
[ INTLIT ] 10
[ HASH ] #
[ RETURN ] return
[ ID 11 ] c - Found in symbol table: 1
[ HASH ] #
[ RCURLY ] }
